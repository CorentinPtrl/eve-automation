---
- name: "Set Interface"
  cisco.ios.ios_l3_interfaces:
    config:
      - name: "{{ item }}"
        ipv4:
          - address: "{{ subnet | ansible.utils.ipmath(groups['ios'].index(inventory_hostname) + 1) }}/{{ subnet | ansible.utils.ipaddr('prefix') }}"
  with_items: "{{ routers[inventory_hostname].ints }}"
  when: inventory_hostname != "localhost"

- name: Set EIGRP Networks
  cisco.ios.ios_config:
    lines:
      - network {{ item | ansible.utils.ipaddr('address') }} {{ item | ansible.utils.ipaddr('netmask') }}
    parents: router eigrp {{ routers[inventory_hostname].asn }}
    before: "no router eigrp {{ routers[inventory_hostname].asn }}"
  with_items: "{{ routers[inventory_hostname].networks }}"
  when: inventory_hostname != "localhost"

- name: Add interconnection network
  cisco.ios.ios_config:
    lines:
      - network {{ subnet | ansible.utils.ipmath(1) | ansible.utils.ipaddr('address') }} {{ subnet | ansible.utils.ipaddr('netmask') }}
    parents: router eigrp {{ routers[inventory_hostname].asn }}
  when: inventory_hostname != "localhost"

- name: Debug Routers
  debug:
    var: "{{ item.value.asn }}"
  with_items: "{{ routers | dict2items }}"
  when: inventory_hostname != "localhost"

- name: Redistribute Across Routers
  cisco.ios.ios_config:
    lines:
      - default-metric 10000  100  255  1  1500
      - redistribute eigrp {{ item.value.asn}}
    parents: router eigrp {{ routers[inventory_hostname].asn }}
  when: item.key != inventory_hostname and inventory_hostname != "localhost"
  with_items: "{{ routers | dict2items }}"